//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxcrafter.h"


// Declare the bitmap loading function
extern void wxC9ED9InitBitmapResources();

static bool bBitmapLoaded = false;


MainDialogBaseClass::MainDialogBaseClass(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC9ED9InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* mainSizer = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(mainSizer);
    
    m_panel17 = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    
    mainSizer->Add(m_panel17, 0, wxALL, 5);
    
    wxBoxSizer* boxSizer19 = new wxBoxSizer(wxVERTICAL);
    m_panel17->SetSizer(boxSizer19);
    
    m_datePicker23 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    m_datePicker23->SetToolTip(wxT("Fecha del comunicado"));
    
    boxSizer19->Add(m_datePicker23, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 5);
    
    wxFlexGridSizer* flexGridSizer25 = new wxFlexGridSizer(5, 2, 0, 0);
    flexGridSizer25->SetFlexibleDirection( wxBOTH );
    flexGridSizer25->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer25->AddGrowableCol(0);
    
    boxSizer19->Add(flexGridSizer25, 1, wxALL|wxEXPAND, 5);
    
    m_staticText27 = new wxStaticText(m_panel17, wxID_ANY, wxT("Saldo anterior de clientes"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer25->Add(m_staticText27, 0, wxALL, 5);
    
    m_saldoAnteriorTextCtrl29 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    m_saldoAnteriorTextCtrl29->SetToolTip(wxT("Es el saldo pendiente de clientes hasta ayer."));
    #if wxVERSION_NUMBER >= 3000
    m_saldoAnteriorTextCtrl29->SetHint(wxT(""));
    #endif
    
    flexGridSizer25->Add(m_saldoAnteriorTextCtrl29, 0, wxALL, 5);
    
    m_staticText31 = new wxStaticText(m_panel17, wxID_ANY, wxT("Crédito concedido hoy"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer25->Add(m_staticText31, 0, wxALL, 5);
    
    m_creditoConcedidoTextCtrl33 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_creditoConcedidoTextCtrl33->SetHint(wxT(""));
    #endif
    
    flexGridSizer25->Add(m_creditoConcedidoTextCtrl33, 0, wxALL, 5);
    
    m_staticText35 = new wxStaticText(m_panel17, wxID_ANY, wxT("Crédito anterior cobrado hoy"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer25->Add(m_staticText35, 0, wxALL, 5);
    
    m_creditoCobradoTextCtrl37 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_creditoCobradoTextCtrl37->SetHint(wxT(""));
    #endif
    
    flexGridSizer25->Add(m_creditoCobradoTextCtrl37, 0, wxALL, 5);
    
    m_staticText39 = new wxStaticText(m_panel17, wxID_ANY, wxT("Saldo final de hoy"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer25->Add(m_staticText39, 0, wxALL, 5);
    
    m_saldoFinalTextCtrl41 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT|wxTE_READONLY);
    #if wxVERSION_NUMBER >= 3000
    m_saldoFinalTextCtrl41->SetHint(wxT(""));
    #endif
    
    flexGridSizer25->Add(m_saldoFinalTextCtrl41, 0, wxALL, 5);
    
    m_staticLine51 = new wxStaticLine(m_panel17, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxLI_HORIZONTAL);
    
    flexGridSizer25->Add(m_staticLine51, 0, wxALL|wxEXPAND, 5);
    
    m_staticLine53 = new wxStaticLine(m_panel17, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxLI_HORIZONTAL);
    
    flexGridSizer25->Add(m_staticLine53, 0, wxALL|wxEXPAND, 5);
    
    wxFlexGridSizer* flexGridSizer49 = new wxFlexGridSizer(8, 4, 0, 0);
    flexGridSizer49->SetFlexibleDirection( wxBOTH );
    flexGridSizer49->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    boxSizer19->Add(flexGridSizer49, 0, wxALL|wxEXPAND, 5);
    
    m_staticText55 = new wxStaticText(m_panel17, wxID_ANY, wxT("Próximo vencimiento de"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer49->Add(m_staticText55, 0, wxALL, 5);
    
    m_banco1textCtrl57 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), 0);
    m_banco1textCtrl57->SetToolTip(wxT("Nombre del primer banco del vencimiento más próximo"));
    #if wxVERSION_NUMBER >= 3000
    m_banco1textCtrl57->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_banco1textCtrl57, 0, wxALL, 5);
    
    m_vencimiento1banco1datePicker59 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    m_vencimiento1banco1datePicker59->SetToolTip(wxT("Fecha de vencimiento más próximo del primer banco"));
    
    flexGridSizer49->Add(m_vencimiento1banco1datePicker59, 0, wxALL, 5);
    
    m_importe1banco1textCtrl61 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    m_importe1banco1textCtrl61->SetToolTip(wxT("Importe del vencimiento más próximo del primer banco"));
    #if wxVERSION_NUMBER >= 3000
    m_importe1banco1textCtrl61->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_importe1banco1textCtrl61, 0, wxALL, 5);
    
    m_staticText63 = new wxStaticText(m_panel17, wxID_ANY, wxT("Siguiente vencimiento"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer49->Add(m_staticText63, 0, wxALL, 5);
    
    flexGridSizer49->Add(0, 0, 1, wxALL, 5);
    
    m_vencimiento2banco1datePicker69 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    
    flexGridSizer49->Add(m_vencimiento2banco1datePicker69, 0, wxALL, 5);
    
    m_importe2banco1textCtrl71 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_importe2banco1textCtrl71->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_importe2banco1textCtrl71, 0, wxALL, 5);
    
    m_staticText73 = new wxStaticText(m_panel17, wxID_ANY, wxT("Próximo vencimiento de"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer49->Add(m_staticText73, 0, wxALL, 5);
    
    m_banco2textCtrl75 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), 0);
    m_banco2textCtrl75->SetToolTip(wxT("Segundo banco con un vencimiento pendiente"));
    #if wxVERSION_NUMBER >= 3000
    m_banco2textCtrl75->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_banco2textCtrl75, 0, wxALL, 5);
    
    m_vencimiento1banco2datePicker77 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    
    flexGridSizer49->Add(m_vencimiento1banco2datePicker77, 0, wxALL, 5);
    
    m_importe1banco2textCtrl79 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_importe1banco2textCtrl79->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_importe1banco2textCtrl79, 0, wxALL, 5);
    
    m_staticText81 = new wxStaticText(m_panel17, wxID_ANY, wxT("Siguiente vencimiento"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer49->Add(m_staticText81, 0, wxALL, 5);
    
    flexGridSizer49->Add(0, 0, 1, wxALL, 5);
    
    m_vencimiento2banco2datePicker85 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    
    flexGridSizer49->Add(m_vencimiento2banco2datePicker85, 0, wxALL, 5);
    
    m_importe2banco2textCtrl87 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_importe2banco2textCtrl87->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_importe2banco2textCtrl87, 0, wxALL, 5);
    
    m_staticText89 = new wxStaticText(m_panel17, wxID_ANY, wxT("Próximo vencimiento de"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer49->Add(m_staticText89, 0, wxALL, 5);
    
    m_banco3textCtrl91 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), 0);
    m_banco3textCtrl91->SetToolTip(wxT("Tercer banco con vencimientos pendientes"));
    #if wxVERSION_NUMBER >= 3000
    m_banco3textCtrl91->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_banco3textCtrl91, 0, wxALL, 5);
    
    m_vencimiento1banco3datePicker93 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    
    flexGridSizer49->Add(m_vencimiento1banco3datePicker93, 0, wxALL, 5);
    
    m_importe1banco3textCtrl95 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_importe1banco3textCtrl95->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_importe1banco3textCtrl95, 0, wxALL, 5);
    
    m_staticText97 = new wxStaticText(m_panel17, wxID_ANY, wxT("Siguiente vencimiento"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer49->Add(m_staticText97, 0, wxALL, 5);
    
    flexGridSizer49->Add(0, 0, 1, wxALL, 5);
    
    m_vencimiento2banco3datePicker101 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    
    flexGridSizer49->Add(m_vencimiento2banco3datePicker101, 0, wxALL, 5);
    
    m_importe2banco3textCtrl103 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_importe2banco3textCtrl103->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_importe2banco3textCtrl103, 0, wxALL, 5);
    
    m_staticText127 = new wxStaticText(m_panel17, wxID_ANY, wxT("Suma total de pagos pendientes"), wxDefaultPosition, wxSize(-1,-1), 0);
    wxFont m_staticText127Font = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_staticText127Font.SetWeight(wxFONTWEIGHT_BOLD);
    m_staticText127->SetFont(m_staticText127Font);
    
    flexGridSizer49->Add(m_staticText127, 0, wxALL, 5);
    
    flexGridSizer49->Add(0, 0, 1, wxALL, 5);
    
    flexGridSizer49->Add(0, 0, 1, wxALL, 5);
    
    m_importeTotalVencimientosTextCtrl133 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT|wxTE_READONLY);
    wxFont m_importeTotalVencimientosTextCtrl133Font = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_importeTotalVencimientosTextCtrl133Font.SetWeight(wxFONTWEIGHT_BOLD);
    m_importeTotalVencimientosTextCtrl133->SetFont(m_importeTotalVencimientosTextCtrl133Font);
    #if wxVERSION_NUMBER >= 3000
    m_importeTotalVencimientosTextCtrl133->SetHint(wxT(""));
    #endif
    
    flexGridSizer49->Add(m_importeTotalVencimientosTextCtrl133, 0, wxALL, 5);
    
    m_staticLine135 = new wxStaticLine(m_panel17, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxLI_HORIZONTAL);
    
    flexGridSizer49->Add(m_staticLine135, 0, wxALL|wxEXPAND, 5);
    
    m_staticLine137 = new wxStaticLine(m_panel17, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxLI_HORIZONTAL);
    
    flexGridSizer49->Add(m_staticLine137, 0, wxALL|wxEXPAND, 5);
    
    m_staticLine139 = new wxStaticLine(m_panel17, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxLI_HORIZONTAL);
    
    flexGridSizer49->Add(m_staticLine139, 0, wxALL|wxEXPAND, 5);
    
    m_staticLine141 = new wxStaticLine(m_panel17, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxLI_HORIZONTAL);
    
    flexGridSizer49->Add(m_staticLine141, 0, wxALL|wxEXPAND, 5);
    
    wxFlexGridSizer* flexGridSizer107 = new wxFlexGridSizer(3, 3, 0, 0);
    flexGridSizer107->SetFlexibleDirection( wxBOTH );
    flexGridSizer107->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer107->AddGrowableCol(0);
    
    boxSizer19->Add(flexGridSizer107, 0, wxALL|wxEXPAND, 5);
    
    m_staticText109 = new wxStaticText(m_panel17, wxID_ANY, wxT("Total en pagarés de clientes en cartera"), wxDefaultPosition, wxSize(-1,-1), 0);
    wxFont m_staticText109Font = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_staticText109Font.SetWeight(wxFONTWEIGHT_BOLD);
    m_staticText109->SetFont(m_staticText109Font);
    
    flexGridSizer107->Add(m_staticText109, 0, wxALL, 5);
    
    flexGridSizer107->Add(0, 0, 0, wxALL, 5);
    
    m_totalPagaresEnCarteraTextCtrl113 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    wxFont m_totalPagaresEnCarteraTextCtrl113Font = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
    m_totalPagaresEnCarteraTextCtrl113Font.SetWeight(wxFONTWEIGHT_BOLD);
    m_totalPagaresEnCarteraTextCtrl113->SetFont(m_totalPagaresEnCarteraTextCtrl113Font);
    #if wxVERSION_NUMBER >= 3000
    m_totalPagaresEnCarteraTextCtrl113->SetHint(wxT(""));
    #endif
    
    flexGridSizer107->Add(m_totalPagaresEnCarteraTextCtrl113, 0, wxALL, 5);
    
    m_staticText115 = new wxStaticText(m_panel17, wxID_ANY, wxT("Previsión de cobro hasta"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer107->Add(m_staticText115, 0, wxALL, 5);
    
    m_prevision1datePicker117 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    
    flexGridSizer107->Add(m_prevision1datePicker117, 0, wxALL, 5);
    
    m_importePrevision1textCtrl119 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    m_importePrevision1textCtrl119->SetToolTip(wxT("Importe de los pagarés hasta la fecha"));
    #if wxVERSION_NUMBER >= 3000
    m_importePrevision1textCtrl119->SetHint(wxT(""));
    #endif
    
    flexGridSizer107->Add(m_importePrevision1textCtrl119, 0, wxALL, 5);
    
    m_staticText121 = new wxStaticText(m_panel17, wxID_ANY, wxT("Previsión hasta"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer107->Add(m_staticText121, 0, wxALL, 5);
    
    m_prevision2datePicker123 = new wxDatePickerCtrl(m_panel17, wxID_ANY, wxDefaultDateTime, wxDefaultPosition, wxSize(-1,-1), wxDP_DEFAULT);
    
    flexGridSizer107->Add(m_prevision2datePicker123, 0, wxALL, 5);
    
    m_importePrevision2textCtrl125 = new wxTextCtrl(m_panel17, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_RIGHT);
    #if wxVERSION_NUMBER >= 3000
    m_importePrevision2textCtrl125->SetHint(wxT(""));
    #endif
    
    flexGridSizer107->Add(m_importePrevision2textCtrl125, 0, wxALL, 5);
    
    mainSizer->Add(0, 0, 1, wxALL|wxEXPAND, 5);
    
    m_staticLine15 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxLI_HORIZONTAL);
    
    mainSizer->Add(m_staticLine15, 0, wxEXPAND|wxALL, 5);
    
    wxBoxSizer* boxSizer12 = new wxBoxSizer(wxHORIZONTAL);
    
    mainSizer->Add(boxSizer12, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
    
    m_buttonOK = new wxButton(this, wxID_OK, wxT("OK"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_buttonOK->SetDefault();
    
    boxSizer12->Add(m_buttonOK, 0, wxALL, 5);
    
    m_buttonCancel = new wxButton(this, wxID_CANCEL, wxT("Cancel"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    boxSizer12->Add(m_buttonCancel, 0, wxALL, 5);
    
    SetName(wxT("MainDialogBaseClass"));
    SetSize(500,300);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

MainDialogBaseClass::~MainDialogBaseClass()
{
}
